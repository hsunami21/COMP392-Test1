{"version":3,"sources":["core/game.ts"],"names":[],"mappings":"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","file":"core/game.js","sourcesContent":["/// <reference path=\"_reference.ts\"/>\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.WebGLRenderer;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Material = THREE.Material;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport PointLight = THREE.PointLight;\nimport AmbientLight = THREE.AmbientLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport CScreen = config.Screen;\n\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\n// setup an IIFE structure (Immediately Invoked Function Expression)\nvar game = (() => {\n\n    // declare game objects\n    var scene: Scene = new Scene();\n    var renderer: Renderer;\n    var camera: PerspectiveCamera;\n    var control: Control;\n    var gui: GUI;\n    var stats: Stats;\n    \n    var axes: AxisHelper;\n    var plane: Mesh;\n    var ambientLight: AmbientLight;\n    var pointLight: PointLight;\n    var spotLight: SpotLight;\n    var cubes: gameObject[];\n    var tower: THREE.Object3D;\n    var skybox: gameObject;\n    \n    function init() {\n        // Instantiate a new Scene object\n        //scene = new Scene();\n        \n        setupRenderer(); // setup the default renderer\n\t\n        setupCamera(); // setup the camera\n\n\n        /* ENTER CODE HERE */\n        // add an axis helper to the scene\n        axes = new AxisHelper(30);\n        scene.add(axes);\n        console.log(\"Added Axis Helper to scene...\");\n    \n        //Add a Plane to the Scene\n        plane = new gameObject(\n            new PlaneGeometry(60, 40, 1, 1),\n            new LambertMaterial({ map: THREE.ImageUtils.loadTexture('../../Assets/Images/grass.jpg') }),\n            0, 0, 0);\n\n        plane.rotation.x = -0.5 * Math.PI;\n    \n        scene.add(plane);\n        console.log(\"Added Plane Primitive to scene...\");\n        \n        // Add an AmbientLight to the scene\n        ambientLight = new AmbientLight(0x0c0c0c);\n        scene.add(ambientLight);\n        console.log(\"Added an Ambient Light to Scene\");\n        \n        // Add a PointLight to the scene\n        pointLight = new PointLight(0xffffff, 1, 5000);\n        pointLight.position.set(0, 50, 0);\n        \n        scene.add(pointLight);\n        \n        // Add a SpotLight to the scene\n        spotLight = new SpotLight(0xffffff);\n        spotLight.position.set(-40, 80, 10);\n        spotLight.castShadow = true;\n        spotLight.shadowMapWidth = 2048;\n        spotLight.shadowMapHeight = 2048;\n        scene.add(spotLight);\n        console.log(\"Added a SpotLight Light to Scene\");\n    \n        skybox = new gameObject(\n            new THREE.SphereGeometry(45, 32, 32),\n            new THREE.MeshLambertMaterial({ map: THREE.ImageUtils.loadTexture('../../Assets/Images/skybox.jpeg'), side: THREE.BackSide}),\n            0, 0, 0\n        );\n\n        \n        skybox.castShadow = false;\n        scene.add(skybox);\n        console.log(\"Added a Skybox to Scene\");\n                \n        // create a new array of cubes and populate it\n        cubes = new Array<gameObject>();\n        tower = new THREE.Object3D();\n        \n        cubes.push(new gameObject(\n            new THREE.CubeGeometry(6, 6, 6),\n            new THREE.MeshLambertMaterial({color: (Math.random() * 0xFFFFFF << 0), map: THREE.ImageUtils.loadTexture('../../Assets/Images/stone.jpg')}),\n            0, 3, 0\n        ));\n        \n        cubes.push(new gameObject(\n            new THREE.CubeGeometry(5, 5, 5),\n            new THREE.MeshLambertMaterial({color: (Math.random() * 0xFFFFFF << 0), map: THREE.ImageUtils.loadTexture('../../Assets/Images/stone.jpg')}),\n            0, 8.5, 0\n        ));\n        \n        cubes.push(new gameObject(\n            new THREE.CubeGeometry(4, 4, 4),\n            new THREE.MeshLambertMaterial({color: (Math.random() * 0xFFFFFF << 0), map: THREE.ImageUtils.loadTexture('../../Assets/Images/stone.jpg')}),\n            0, 13, 0\n        ));\n        \n        cubes.push(new gameObject(\n            new THREE.CubeGeometry(3, 3, 3),\n            new THREE.MeshLambertMaterial({color: (Math.random() * 0xFFFFFF << 0), map: THREE.ImageUtils.loadTexture('../../Assets/Images/stone.jpg')}),\n            0, 16.5, 0\n        ));\n        \n        cubes.push(new gameObject(\n            new THREE.CubeGeometry(2, 2, 2),\n            new THREE.MeshLambertMaterial({color: (Math.random() * 0xFFFFFF << 0), map: THREE.ImageUtils.loadTexture('../../Assets/Images/stone.jpg')}),\n            0, 19, 0\n        ));\n        \n        // add all cubes to tower\n        for (var i = 0; i < cubes.length; i++) {\n            tower.add(cubes[i]);\n            console.log(\"Added cube to tower\");\n        }\n        \n        // add tower to scene\n        scene.add(tower);\n        console.log(\"Added tower to scene\");\n        \n        // add controls\n        gui = new GUI();\n        control = new Control(0.01, 0.01, 0.01, 0.01, 0.01, false, 1);\n        addControl(control);\n\n        // Add framerate stats\n        addStatsObject();\n        console.log(\"Added Stats to scene...\");\n\n        document.body.appendChild(renderer.domElement);\n        gameLoop(); // render the scene\t\n\n    }\n\n    function addControl(controlObject: Control): void {\n        /* ENTER CODE for the GUI CONTROL HERE */\n        gui.add(controlObject, \"cube1RotY\", -0.5, 0.5);\n        gui.add(controlObject, \"cube2RotY\", -0.5, 0.5);\n        gui.add(controlObject, \"cube3RotY\", -0.5, 0.5);\n        gui.add(controlObject, \"cube4RotY\", -0.5, 0.5);\n        gui.add(controlObject, \"cube5RotY\", -0.5, 0.5);\n        gui.add(controlObject, \"randomColor\");\n        gui.add(controlObject, \"scale\", 0.1, 1.5);\n    }\n\n    function addStatsObject() {\n        stats = new Stats();\n        stats.setMode(0);\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.top = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    // Setup main game loop\n    function gameLoop(): void {\n        stats.update();\n\n        skybox.rotation.y += 0.005;\n        skybox.rotation.x += 0.005;\n        \n        // change rotation of each cube individually\n        cubes[0].rotation.y += control.cube1RotY;\n        cubes[1].rotation.y += control.cube2RotY;\n        cubes[2].rotation.y += control.cube3RotY;\n        cubes[3].rotation.y += control.cube4RotY;\n        cubes[4].rotation.y += control.cube5RotY;\n        \n        // check if random colour\n        if (control.changeColor) {\n            for (var i = 0; i < cubes.length; i++) {\n                cubes[i].material.setValues({color: (Math.random() * 0xFFFFFF << 0)})\n            }\n            control.changeColor = false;\n        }\n        \n        tower.scale.x = control.scale;\n        tower.scale.y = control.scale;\n        tower.scale.z = control.scale;\n        \n        // render using requestAnimationFrame\n        requestAnimationFrame(gameLoop);\n\t\n        // render the scene\n        renderer.render(scene, camera);\n    }\n\n    // Setup default renderer\n    function setupRenderer(): void {\n        renderer = new Renderer();\n        renderer.setClearColor(0x404040, 1.0);\n        renderer.setSize(CScreen.WIDTH, CScreen.HEIGHT);\n        //renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        console.log(\"Finished setting up Renderer...\");\n    }\n\n    // Setup main camera for the scene\n    function setupCamera(): void {\n        camera = new PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.x = -30;\n        camera.position.y = 40;\n        camera.position.z = 30;\n        camera.lookAt(scene.position);\n        console.log(\"Finished setting up Camera...\");\n    }\n\n    window.onload = init;\n\n    return {\n        scene: scene\n    }\n\n})();\n\n"],"sourceRoot":"/source/"}